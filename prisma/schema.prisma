generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  aId       Int      @id @unique @default(autoincrement())
  userName  String   @unique
  email     String   @unique
  password  String
  firstName String   @default("Max")
  lastName  String   @default("Mustermann")
  timestamp DateTime @default(now())
  tokens    Token[]
  created   Tour[]   @relation("created")
  joined    Tour[]   @relation("joined")
}

model Token {
  tId     Int      @id @unique @default(autoincrement())
  exp     BigInt
  iat     BigInt
  sub     String
  type    String
  aId     Int?
  Account Account? @relation(fields: [aId], references: [aId])
}

model Tour {
  tId          Int          @id @unique @default(autoincrement())
  name         String
  description  String
  startDate    DateTime
  endDate      DateTime
  tourGuide    Int
  accessCode   String       @unique
  checkpoints  Checkpoint[] @relation("tourCheckPoints")
  createdBy    Account      @relation("created", fields: [tourGuide], references: [aId])
  participants Account[]    @relation("joined")
  attractions  Attraction[] @relation("tourAttractions")
}

model Attraction {
  atId         Int      @id @unique @default(autoincrement())
  minAge       Int      @default(0)
  description  String
  openingHours Json?
  website      String
  lId          Int
  location     Location @relation(fields: [lId], references: [lId])
  tours        Tour[]   @relation("tourAttractions")
}

model Location {
  lId              Int          @id @unique @default(autoincrement())
  postCode         Int
  country          String
  city             String?
  street           String
  houseNumber      String?
  latitude         Decimal
  longtitude       Decimal
  routeDescription String?
  Attraction       Attraction[]
  Checkpoint       Checkpoint[]
}

model Checkpoint {
  cId            Int      @id @default(autoincrement())
  name           String
  time           DateTime
  description    String?  @default("")
  isMeetingPoint Boolean
  lId            Int
  tourId         Int
  location       Location @relation(fields: [lId], references: [lId])
  tour           Tour     @relation("tourCheckPoints", fields: [tourId], references: [tId])
}
